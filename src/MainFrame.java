
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.UndoableEditEvent;
import javax.swing.event.UndoableEditListener;
import javax.swing.text.Document;
import javax.swing.undo.UndoManager;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Dung
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    String title = "";
    JFileChooser file = new JFileChooser();
    private UndoManager um;
    boolean checkSave = false;

    public MainFrame() {
        initComponents();
        rbDown.setSelected(true);
        um = new UndoManager();
        Document doc = this.textArea.getDocument();
        doc.addUndoableEditListener(new UndoableEditListener() {
            @Override
            public void undoableEditHappened(UndoableEditEvent e) {
                um.addEdit(e.getEdit());
            }
        });
        this.setTitle("My Text Editor");
    }

    public void saveNewFile() {
        FileWriter fw = null;
        BufferedWriter bw = null;
        int save;
        save = file.showSaveDialog(null);
        if (save == JFileChooser.APPROVE_OPTION) {
            try {
                if (file.getSelectedFile().getPath().indexOf(".txt") != -1) {
                    fw = new FileWriter(file.getSelectedFile().getPath());
                    bw = new BufferedWriter(fw);
                    bw.write(textArea.getText());
                    title = file.getName(file.getSelectedFile());
                    bw.close();
                    checkSave = true;
                } else {
                    fw = new FileWriter(file.getSelectedFile().getPath() + ".txt");
                    bw = new BufferedWriter(fw);
                    bw.write(textArea.getText());
                    title = file.getName(file.getSelectedFile());
                    bw.close();
                    checkSave = true;
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    public void loadFile(File f) {
        FileReader fr = null;
        BufferedReader br = null;
        try {
            fr = new FileReader(f);
            br = new BufferedReader(fr);
            textArea.read(br, null);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Loading fail");
        } finally {
            try {
                if (fr != null) {
                    fr.close();
                }

                if (br != null) {
                    br.close();
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Error");
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FindDl = new javax.swing.JDialog();
        btnFindNext = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtFind = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        rbUp = new javax.swing.JRadioButton();
        rbDown = new javax.swing.JRadioButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        ReplaceDl = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtFindRp = new javax.swing.JTextField();
        txtReplace = new javax.swing.JTextField();
        btnFindNextRp = new javax.swing.JButton();
        btnReplace = new javax.swing.JButton();
        btnCancelRp = new javax.swing.JButton();
        FontDl = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        txtChangeFont = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListFont = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        txtChangeFontStyle = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListFontStyle = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        txtChangeFontSize = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        ListFontSize = new javax.swing.JList();
        jPanel1 = new javax.swing.JPanel();
        txtSample = new javax.swing.JLabel();
        btnOkFontDl = new javax.swing.JButton();
        btnCancelFontDl = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        FileMn = new javax.swing.JMenu();
        NewMnIt = new javax.swing.JMenuItem();
        OpenMnIt = new javax.swing.JMenuItem();
        SaveMnIt = new javax.swing.JMenuItem();
        SaveAsMnIt = new javax.swing.JMenuItem();
        ExitMnIt = new javax.swing.JMenuItem();
        EditMn = new javax.swing.JMenu();
        SelectAllMnIt = new javax.swing.JMenuItem();
        CutMnIt = new javax.swing.JMenuItem();
        CopyMnIt = new javax.swing.JMenuItem();
        PasteMnIt = new javax.swing.JMenuItem();
        UndoMnIt = new javax.swing.JMenuItem();
        RedoMnIt = new javax.swing.JMenuItem();
        FindMnIt = new javax.swing.JMenuItem();
        ReplaceMnIt = new javax.swing.JMenuItem();
        ChangeFontMnIt = new javax.swing.JMenuItem();

        btnFindNext.setText("Find next");
        btnFindNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindNextActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jLabel1.setText("Find what:");

        txtFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFindActionPerformed(evt);
            }
        });

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Direction"));

        buttonGroup1.add(rbUp);
        rbUp.setText("Up");

        buttonGroup1.add(rbDown);
        rbDown.setText("Down");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(rbDown)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbUp)
                    .addComponent(rbDown))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout FindDlLayout = new javax.swing.GroupLayout(FindDl.getContentPane());
        FindDl.getContentPane().setLayout(FindDlLayout);
        FindDlLayout.setHorizontalGroup(
            FindDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindDlLayout.createSequentialGroup()
                .addGroup(FindDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FindDlLayout.createSequentialGroup()
                        .addGroup(FindDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(FindDlLayout.createSequentialGroup()
                                .addGap(149, 149, 149)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(FindDlLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel1)
                                .addGap(38, 38, 38)
                                .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58)
                                .addComponent(btnFindNext)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FindDlLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        FindDlLayout.setVerticalGroup(
            FindDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindDlLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(FindDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtFind, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindNext))
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        jLabel2.setText("Find what:");

        jLabel3.setText("Replace with:");

        btnFindNextRp.setText("Find next");
        btnFindNextRp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindNextRpActionPerformed(evt);
            }
        });

        btnReplace.setText("Replace");
        btnReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReplaceActionPerformed(evt);
            }
        });

        btnCancelRp.setText("Cancel");

        javax.swing.GroupLayout ReplaceDlLayout = new javax.swing.GroupLayout(ReplaceDl.getContentPane());
        ReplaceDl.getContentPane().setLayout(ReplaceDlLayout);
        ReplaceDlLayout.setHorizontalGroup(
            ReplaceDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ReplaceDlLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(ReplaceDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(ReplaceDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtReplace)
                    .addComponent(txtFindRp, javax.swing.GroupLayout.DEFAULT_SIZE, 358, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 41, Short.MAX_VALUE)
                .addGroup(ReplaceDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnFindNextRp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnReplace, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCancelRp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(60, 60, 60))
        );
        ReplaceDlLayout.setVerticalGroup(
            ReplaceDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReplaceDlLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(ReplaceDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtFindRp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFindNextRp))
                .addGap(59, 59, 59)
                .addGroup(ReplaceDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtReplace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReplace))
                .addGap(44, 44, 44)
                .addComponent(btnCancelRp)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLabel4.setText("Font:");

        ListFont.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListFontMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ListFont);

        jLabel5.setText("Font Style:");

        ListFontStyle.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Regular", "Bold", "Italic", "Bold Itatlic" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        ListFontStyle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListFontStyleMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ListFontStyle);

        jLabel6.setText("Size:");

        txtChangeFontSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtChangeFontSizeActionPerformed(evt);
            }
        });

        ListFontSize.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListFontSizeMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(ListFontSize);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Sample"));

        txtSample.setText("AaBbCcDd");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSample)
                .addContainerGap(119, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(txtSample)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        btnOkFontDl.setText("OK");
        btnOkFontDl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkFontDlActionPerformed(evt);
            }
        });

        btnCancelFontDl.setText("Cancel");
        btnCancelFontDl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelFontDlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FontDlLayout = new javax.swing.GroupLayout(FontDl.getContentPane());
        FontDl.getContentPane().setLayout(FontDlLayout);
        FontDlLayout.setHorizontalGroup(
            FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FontDlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtChangeFont, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 172, Short.MAX_VALUE)
                .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnOkFontDl)
                    .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addComponent(txtChangeFontStyle)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FontDlLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtChangeFontSize, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FontDlLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelFontDl)
                        .addGap(60, 60, 60))))
        );
        FontDlLayout.setVerticalGroup(
            FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FontDlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtChangeFont, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChangeFontStyle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtChangeFontSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane4)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FontDlLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(98, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FontDlLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FontDlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnOkFontDl)
                            .addComponent(btnCancelFontDl))
                        .addGap(138, 138, 138))))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setRows(5);
        textArea.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                textAreaInputMethodTextChanged(evt);
            }
        });
        jScrollPane1.setViewportView(textArea);

        FileMn.setText("File");

        NewMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        NewMnIt.setText("New");
        NewMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewMnItActionPerformed(evt);
            }
        });
        FileMn.add(NewMnIt);

        OpenMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        OpenMnIt.setText("Open");
        OpenMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenMnItActionPerformed(evt);
            }
        });
        FileMn.add(OpenMnIt);

        SaveMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        SaveMnIt.setText("Save");
        SaveMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveMnItActionPerformed(evt);
            }
        });
        FileMn.add(SaveMnIt);

        SaveAsMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        SaveAsMnIt.setText("Save as");
        SaveAsMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveAsMnItActionPerformed(evt);
            }
        });
        FileMn.add(SaveAsMnIt);

        ExitMnIt.setText("Exit");
        ExitMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitMnItActionPerformed(evt);
            }
        });
        FileMn.add(ExitMnIt);

        jMenuBar1.add(FileMn);

        EditMn.setText("Edit");

        SelectAllMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        SelectAllMnIt.setText("Select all");
        SelectAllMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectAllMnItActionPerformed(evt);
            }
        });
        EditMn.add(SelectAllMnIt);

        CutMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        CutMnIt.setText("Cut");
        CutMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CutMnItActionPerformed(evt);
            }
        });
        EditMn.add(CutMnIt);

        CopyMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        CopyMnIt.setText("Copy");
        CopyMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CopyMnItActionPerformed(evt);
            }
        });
        EditMn.add(CopyMnIt);

        PasteMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        PasteMnIt.setText("Paste");
        PasteMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasteMnItActionPerformed(evt);
            }
        });
        EditMn.add(PasteMnIt);

        UndoMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        UndoMnIt.setText("Undo");
        UndoMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UndoMnItActionPerformed(evt);
            }
        });
        EditMn.add(UndoMnIt);

        RedoMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
        RedoMnIt.setText("Redo");
        RedoMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RedoMnItActionPerformed(evt);
            }
        });
        EditMn.add(RedoMnIt);

        FindMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        FindMnIt.setText("Find");
        FindMnIt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FindMnItMouseClicked(evt);
            }
        });
        FindMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindMnItActionPerformed(evt);
            }
        });
        EditMn.add(FindMnIt);

        ReplaceMnIt.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        ReplaceMnIt.setText("Replace");
        ReplaceMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReplaceMnItActionPerformed(evt);
            }
        });
        EditMn.add(ReplaceMnIt);

        ChangeFontMnIt.setText("Change font");
        ChangeFontMnIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChangeFontMnItActionPerformed(evt);
            }
        });
        EditMn.add(ChangeFontMnIt);

        jMenuBar1.add(EditMn);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 808, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CutMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CutMnItActionPerformed
        // TODO add your handling code here:
        textArea.cut();
    }//GEN-LAST:event_CutMnItActionPerformed

    private void CopyMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CopyMnItActionPerformed
        // TODO add your handling code here:
        textArea.copy();
    }//GEN-LAST:event_CopyMnItActionPerformed

    private void NewMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewMnItActionPerformed
        // TODO add your handling code here:
        if (textArea != null) {
            int choice = JOptionPane.showConfirmDialog(null, "Do you want to save", "Error", JOptionPane.YES_NO_CANCEL_OPTION);
            if (choice == JOptionPane.YES_OPTION) {
                saveNewFile();
                textArea.setText("");
            } else if (choice == JOptionPane.NO_OPTION) {
                textArea.setText("");
            }
        }
    }//GEN-LAST:event_NewMnItActionPerformed

    private void OpenMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OpenMnItActionPerformed
        // TODO add your handling code here:
        if (!textArea.getText().equals("") && !checkSave) {
            int choice = JOptionPane.showConfirmDialog(null, "Do you want to save", "Error", JOptionPane.YES_NO_CANCEL_OPTION);
            if (choice == JOptionPane.YES_OPTION) {
                SaveMnItActionPerformed(null);
                textArea.setText("");
                checkSave = true;
            } else if (choice == JOptionPane.NO_OPTION) {
                textArea.setText("");
            }
        }
        JFileChooser fc = new JFileChooser();
        int choice = fc.showOpenDialog(null);
        if (choice == JFileChooser.APPROVE_OPTION) {
            File f = fc.getSelectedFile();
            loadFile(f);
            setTitle(f.getAbsolutePath());
        }
    }//GEN-LAST:event_OpenMnItActionPerformed

    private void SaveMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveMnItActionPerformed
        // TODO add your handling code here:
        FileWriter fw;
        BufferedWriter bw;
        if (title.equals("")) {
            saveNewFile();
        } else {
            try {
                fw = new FileWriter(file.getSelectedFile().getPath() + ".txt");
                bw = new BufferedWriter(fw);
                bw.write(textArea.getText());
                title = file.getName(file.getSelectedFile());
                bw.close();
                checkSave = true;
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Saving fail");
            }
        }
    }//GEN-LAST:event_SaveMnItActionPerformed

    private void SaveAsMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveAsMnItActionPerformed
        // TODO add your handling code here:
        saveNewFile();
    }//GEN-LAST:event_SaveAsMnItActionPerformed

    private void ExitMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitMnItActionPerformed
        // TODO add your handling code here:
        if (!textArea.getText().equals("")) {
            int choice = JOptionPane.showConfirmDialog(null, "Do you want to save?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION);
            if (choice == JOptionPane.YES_OPTION) {
                SaveMnItActionPerformed(null);
                checkSave = false;
                System.exit(0);
            } else if (choice == JOptionPane.NO_OPTION) {
                checkSave = false;
                System.exit(0);
            }
        }
    }//GEN-LAST:event_ExitMnItActionPerformed

    private void SelectAllMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectAllMnItActionPerformed
        // TODO add your handling code here:
        textArea.selectAll();
    }//GEN-LAST:event_SelectAllMnItActionPerformed

    private void PasteMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasteMnItActionPerformed
        // TODO add your handling code here:
        textArea.paste();
    }//GEN-LAST:event_PasteMnItActionPerformed

    private void UndoMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UndoMnItActionPerformed
        // TODO add your handling code here:
        if (um.canUndo()) {
            try {
                um.undo();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_UndoMnItActionPerformed

    private void RedoMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RedoMnItActionPerformed
        // TODO add your handling code here:
        if (um.canRedo()) {
            try {
                um.redo();
            } catch (Exception e) {
            }
        }
    }//GEN-LAST:event_RedoMnItActionPerformed

    private void FindMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindMnItActionPerformed
        // TODO add your handling code here:
        FindDl.setSize(700, 300);
        FindDl.setVisible(true);
    }//GEN-LAST:event_FindMnItActionPerformed

    private void FindMnItMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FindMnItMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_FindMnItMouseClicked

    private void txtFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFindActionPerformed

    private void btnFindNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindNextActionPerformed
        String find = txtFind.getText();
        String currentText = textArea.getText();
        int currentCaret = textArea.getCaretPosition();
        int pos;
        if (rbDown.isSelected()) {
            pos = currentText.indexOf(find, currentCaret);
            if (pos == -1) {
                JOptionPane.showMessageDialog(null, "Not found!!!");
                textArea.setCaretPosition(currentCaret);
            } else {
                textArea.select(pos, pos + find.length());
            }
        } else {
            if (textArea.getSelectedText() != null) {
                currentCaret = currentCaret - textArea.getSelectedText().length();
            }
            currentText = currentText.substring(0, currentCaret);
            pos = currentText.lastIndexOf(find);
            if (pos == -1) {
                JOptionPane.showMessageDialog(this, "Not found!");
                textArea.setCaretPosition(currentCaret);
            } else {
                textArea.select(pos, pos + find.length());
            }
        }
    }//GEN-LAST:event_btnFindNextActionPerformed

    private void ReplaceMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReplaceMnItActionPerformed
        // TODO add your handling code here:
        ReplaceDl.setSize(700, 300);
        ReplaceDl.setVisible(true);
    }//GEN-LAST:event_ReplaceMnItActionPerformed

    private void btnFindNextRpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindNextRpActionPerformed
        // TODO add your handling code here:
        String find = txtFindRp.getText();
        String currentText = textArea.getText();
        int currentCaret = textArea.getCaretPosition();
        int pos;
        pos = currentText.indexOf(find, currentCaret);
        if (pos == -1) {
            JOptionPane.showMessageDialog(null, "Not found!!!");
            textArea.setCaretPosition(currentCaret);
        } else {
            textArea.select(pos, pos + find.length());
        }

    }//GEN-LAST:event_btnFindNextRpActionPerformed

    private void btnReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReplaceActionPerformed
        // TODO add your handling code here:
        if (textArea.getSelectedText() != null) {
            textArea.replaceSelection(txtReplace.getText());
        }
        String t = textArea.getText();
        int posStart = textArea.getCaretPosition();
        int pos = t.indexOf(txtFindRp.getText(), posStart);
        if (pos == -1) {
            posStart = 0;
            pos = t.indexOf(txtFindRp.getText(), posStart);
            if (pos == -1) {
                JOptionPane.showMessageDialog(this, "Not found!");
                return;
            }
        }
        textArea.select(pos, pos + txtFindRp.getText().length());
    }//GEN-LAST:event_btnReplaceActionPerformed

    private void txtChangeFontSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtChangeFontSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtChangeFontSizeActionPerformed

    private void ChangeFontMnItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChangeFontMnItActionPerformed
        // TODO add your handling code here:
        FontDl.setSize(800, 500);
        FontDl.setVisible(true);
        ChangeFontSize();
        ChangeFont();
    }//GEN-LAST:event_ChangeFontMnItActionPerformed

    private void ListFontMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListFontMouseClicked
        // TODO add your handling code here:
        Font cur = txtSample.getFont();
        String fontName = ListFont.getSelectedValue();
        int fontStyle = cur.getStyle();
        int fontSize = cur.getSize();
        txtChangeFont.setText(fontName);
        Font f = new Font(fontName, fontStyle, fontSize);
        txtSample.setFont(f);
    }//GEN-LAST:event_ListFontMouseClicked

    private void ListFontStyleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListFontStyleMouseClicked
        // TODO add your handling code here:
        Font cur = txtSample.getFont();
        String fontName = cur.getFontName();
        int fontStyle = ListFontStyle.getSelectedIndex();
        int fontSize = cur.getSize();
        txtChangeFontStyle.setText(ListFontStyle.getSelectedValue());
        Font f = new Font(fontName, fontStyle, fontSize);
        txtSample.setFont(f);
    }//GEN-LAST:event_ListFontStyleMouseClicked

    private void ListFontSizeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListFontSizeMouseClicked
        // TODO add your handling code here:
        Font cur = txtSample.getFont();
        String fontName = cur.getFontName();
        int fontStyle = cur.getStyle();
        int fontSize = (int) ListFontSize.getSelectedValue();
        txtChangeFontSize.setText(ListFontSize.getSelectedValue().toString());
        Font f = new Font(fontName, fontStyle, fontSize);
        txtSample.setFont(f);
    }//GEN-LAST:event_ListFontSizeMouseClicked

    private void btnOkFontDlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkFontDlActionPerformed
        // TODO add your handling code here:
        Font cur = txtSample.getFont();
        String fontName = cur.getFontName();
        int fontStyle = cur.getStyle();
        int fontSize = cur.getSize();
        Font f = new Font(fontName, fontStyle, fontSize);
        textArea.setFont(f);
        FontDl.setVisible(false);
    }//GEN-LAST:event_btnOkFontDlActionPerformed

    private void btnCancelFontDlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelFontDlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelFontDlActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        ExitMnItActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        FindDl.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void textAreaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_textAreaInputMethodTextChanged
        // TODO add your handling code here:
        checkSave = false;
    }//GEN-LAST:event_textAreaInputMethodTextChanged

    public void ChangeFontSize() {
        DefaultListModel model = new DefaultListModel();
        for (int i = 0; i < 50; i += 2) {
            model.addElement(i);
        }
        ListFontSize.setModel(model);
    }

    public void ChangeFont() {
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        String[] fontName = ge.getAvailableFontFamilyNames();
        DefaultListModel model = new DefaultListModel();
        for (int i = 0; i < fontName.length; i++) {
            model.addElement(fontName[i]);
        }
        ListFont.setModel(model);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem ChangeFontMnIt;
    private javax.swing.JMenuItem CopyMnIt;
    private javax.swing.JMenuItem CutMnIt;
    private javax.swing.JMenu EditMn;
    private javax.swing.JMenuItem ExitMnIt;
    private javax.swing.JMenu FileMn;
    private javax.swing.JDialog FindDl;
    private javax.swing.JMenuItem FindMnIt;
    private javax.swing.JDialog FontDl;
    private javax.swing.JList<String> ListFont;
    private javax.swing.JList ListFontSize;
    private javax.swing.JList<String> ListFontStyle;
    private javax.swing.JMenuItem NewMnIt;
    private javax.swing.JMenuItem OpenMnIt;
    private javax.swing.JMenuItem PasteMnIt;
    private javax.swing.JMenuItem RedoMnIt;
    private javax.swing.JDialog ReplaceDl;
    private javax.swing.JMenuItem ReplaceMnIt;
    private javax.swing.JMenuItem SaveAsMnIt;
    private javax.swing.JMenuItem SaveMnIt;
    private javax.swing.JMenuItem SelectAllMnIt;
    private javax.swing.JMenuItem UndoMnIt;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCancelFontDl;
    private javax.swing.JButton btnCancelRp;
    private javax.swing.JButton btnFindNext;
    private javax.swing.JButton btnFindNextRp;
    private javax.swing.JButton btnOkFontDl;
    private javax.swing.JButton btnReplace;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JRadioButton rbDown;
    private javax.swing.JRadioButton rbUp;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField txtChangeFont;
    private javax.swing.JTextField txtChangeFontSize;
    private javax.swing.JTextField txtChangeFontStyle;
    private javax.swing.JTextField txtFind;
    private javax.swing.JTextField txtFindRp;
    private javax.swing.JTextField txtReplace;
    private javax.swing.JLabel txtSample;
    // End of variables declaration//GEN-END:variables
}
